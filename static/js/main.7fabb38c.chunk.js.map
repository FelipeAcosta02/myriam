{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.svg"],"names":["App","state","chemicalExpression","computedElements","units","grams","mols","molecules","getBetweenParenthsis","el","match","getIndex","Number","getElem","pop","getElemsWithIndex","calculateValues","e","preventDefault","_this$state","_this","exp","length","computeExpression","setState","_this$deriveUnits","deriveUnits","addAtomicValues","alert","elems","map","_ref","MM","rest","Object","objectWithoutProperties","objectSpread","atoms","forEach","mol","replace","entries","_ref2","_ref3","slicedToArray","key","value","element","relativeAtomicMassOf","atomicMass","unit","slice","sumAllValues","avogadro","att","H","He","Li","Be","B","C","N","O","F","Ne","Na","Mg","Al","Si","P","S","Cl","K","Ar","Ca","Sc","Ti","V","Cr","Mn","Fe","Ni","Co","Cu","Zn","Ga","Ge","As","Se","Br","Kr","Rb","Sr","Y","Zr","Nb","Mo","Tc","Ru","Rh","Pd","Ag","Cd","In","Sn","Sb","I","Te","Xe","Cs","Ba","La","Ce","Pr","Nd","Pm","Sm","Eu","Gd","Tb","Dy","Ho","Er","Tm","Yb","Lu","Hf","Ta","W","Re","Os","Ir","Pt","Au","Hg","Tl","Pb","Bi","Po","At","Rn","Fr","Ra","Ac","Pa","Th","Np","U","Am","Pu","Cm","Bk","Cf","Es","Fm","Md","No","Rf","Lr","Db","Bh","Sg","Mt","Rg","Hs","_this2","this","react_default","a","createElement","className","src","logo","alt","height","width","action","placeholder","type","onChange","target","onClick","style","marginTop","_ref4","i","toFixed","Component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7fabb38c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\n\nexport default class App extends Component {\n  state = { chemicalExpression: '', computedElements: [], units: '', grams: 0, mols: 0, molecules: 0 };\n  getBetweenParenthsis = (el) => el.match(/\\(([^)]+)\\)\\d+(?!\\.)|\\(([^)]+)\\)/gi);\n  getIndex = (el) => el.match(/\\d+$/) ? Number(el.match(/\\d+$/)) : 1;\n  getElem = (el) => el.match(/[A-Z][a-z]|[A-Z]/g).pop();\n  getElemsWithIndex = (el) => el.match(/[A-Z][a-z]\\d+(?!\\.)|[A-Z]\\d+(?!\\.)|[A-Z][a-z]|[A-Z]/g);\n  calculateValues = (e) => {\n    e.preventDefault();\n    const { chemicalExpression: exp, units } = this.state;\n    if (exp && units.match(/[a-z]/g).length) {\n      let computedElements = this.computeExpression(exp);\n      this.setState({ computedElements });\n      let { grams, molecules, mols } = this.deriveUnits(units, computedElements);\n      this.setState({ grams, molecules, mols });\n      computedElements = this.addAtomicValues(molecules, mols, computedElements);\n      this.setState({ computedElements });\n    } else {\n      alert('Your Chemical Expression and Units Cannot Be Empty');\n    }\n  };\n  addAtomicValues = (molecules, mols, elems) => {\n    let computedElements = elems.map(({ units, MM, ...rest }) => ({\n      units,\n      atoms: units * molecules,\n      mols: units * mols,\n      grams: units * mols * MM,\n      MM,\n      ...rest\n    }));\n    return computedElements;\n  };\n  computeExpression = (exp) => {\n    let computedElements = {};\n    const moleculeBlocks = this.getBetweenParenthsis(exp) ? this.getBetweenParenthsis(exp) : [];\n    moleculeBlocks.forEach(mol => {\n      exp = exp.replace(mol, '');\n      this.getElemsWithIndex(mol).forEach(el => exp = exp + this.getElem(el) + this.getIndex(mol) * this.getIndex(el));\n    });\n    const elementsUsed = this.getElemsWithIndex(exp);\n    elementsUsed.forEach(el => computedElements[this.getElem(el)] = computedElements[this.getElem(el)] ?\n      computedElements[this.getElem(el)] + this.getIndex(el) : this.getIndex(el));\n    computedElements = Object.entries(computedElements).map(([key, value]) => ({\n      element: key,\n      units: value,\n      MM: this.relativeAtomicMassOf[key] * value,\n      atomicMass: this.relativeAtomicMassOf[key]\n    }));\n    return computedElements;\n  };\n  deriveUnits = (units, computedElements) => {\n    let unit = units[units.length - 1];\n    let value = units.slice(0, units.length - 1)\n    let grams, mols, molecules;\n    if (unit === 'm') {\n      mols = value;\n      grams = value * this.sumAllValues('MM', computedElements);\n    } else if (unit === 'g') {\n      grams = value;\n      mols = value / this.sumAllValues('MM', computedElements);\n    };\n    molecules = mols * this.avogadro;\n    return { grams, mols, molecules };\n  };\n  sumAllValues = (att, computedElements) => {\n    const elems = computedElements ? computedElements : this.state.computedElements;\n    let value = 0;\n    elems.forEach(el => value = value + el[att]);\n    return (value);\n  };\n  avogadro = 602200000000000000000000;\n  relativeAtomicMassOf = {\n    H: 1.0079,\n    He: 4.0026,\n    Li: 6.941,\n    Be: 9.0122,\n    B: 10.811,\n    C: 12.0107,\n    N: 14.0067,\n    O: 15.9994,\n    F: 18.9984,\n    Ne: 20.1797,\n    Na: 22.9897,\n    Mg: 24.305,\n    Al: 26.9815,\n    Si: 28.0855,\n    P: 30.9738,\n    S: 32.065,\n    Cl: 35.453,\n    K: 39.0983,\n    Ar: 39.948,\n    Ca: 40.078,\n    Sc: 44.9559,\n    Ti: 47.867,\n    V: 50.9415,\n    Cr: 51.9961,\n    Mn: 54.938,\n    Fe: 55.845,\n    Ni: 58.6934,\n    Co: 58.9332,\n    Cu: 63.546,\n    Zn: 65.39,\n    Ga: 69.723,\n    Ge: 72.64,\n    As: 74.9216,\n    Se: 78.96,\n    Br: 79.904,\n    Kr: 83.8,\n    Rb: 85.4678,\n    Sr: 87.62,\n    Y: 88.9059,\n    Zr: 91.224,\n    Nb: 92.9064,\n    Mo: 95.94,\n    Tc: 98,\n    Ru: 101.07,\n    Rh: 102.9055,\n    Pd: 106.42,\n    Ag: 107.8682,\n    Cd: 112.411,\n    In: 114.818,\n    Sn: 118.71,\n    Sb: 121.76,\n    I: 126.9045,\n    Te: 127.6,\n    Xe: 131.293,\n    Cs: 132.9055,\n    Ba: 137.327,\n    La: 138.9055,\n    Ce: 140.116,\n    Pr: 140.9077,\n    Nd: 144.24,\n    Pm: 145,\n    Sm: 150.36,\n    Eu: 151.964,\n    Gd: 157.25,\n    Tb: 158.9253,\n    Dy: 162.5,\n    Ho: 164.9303,\n    Er: 167.259,\n    Tm: 168.9342,\n    Yb: 173.04,\n    Lu: 174.967,\n    Hf: 178.49,\n    Ta: 180.9479,\n    W: 183.84,\n    Re: 186.207,\n    Os: 190.23,\n    Ir: 192.217,\n    Pt: 195.078,\n    Au: 196.9665,\n    Hg: 200.59,\n    Tl: 204.3833,\n    Pb: 207.2,\n    Bi: 208.9804,\n    Po: 209,\n    At: 210,\n    Rn: 222,\n    Fr: 223,\n    Ra: 226,\n    Ac: 227,\n    Pa: 231.0359,\n    Th: 232.0381,\n    Np: 237,\n    U: 238.0289,\n    Am: 243,\n    Pu: 244,\n    Cm: 247,\n    Bk: 247,\n    Cf: 251,\n    Es: 252,\n    Fm: 257,\n    Md: 258,\n    No: 259,\n    Rf: 261,\n    Lr: 262,\n    Db: 262,\n    Bh: 264,\n    Sg: 266,\n    Mt: 268,\n    Rg: 272,\n    Hs: 277\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" height='80px' width='80px' />\n          <h1>Put your Chemical Expression Below</h1>\n          <form action=\"Get Chemical Expression\">\n            <span>Expression:</span>\n            <input\n              placeholder='Tc(HPO3)2'\n              type=\"text\" value={this.state.chemicalExpression}\n              onChange={e => this.setState({ chemicalExpression: e.target.value })}\n            />\n            <span>Units:</span>\n            <input\n              placeholder='2.5m OR 3.2g'\n              type=\"text\" value={this.state.units}\n              onChange={e => this.setState({ units: e.target.value })}\n            />\n            <input type='submit' onClick={this.calculateValues} value='Compute Chemical Compound!' />\n          </form>\n          {\n            this.state.computedElements.length ?\n              <table style={{ width: '100%', marginTop: '20px' }}>\n                <thead>\n                  <tr>\n                    <th>Element</th>\n                    <th>Units</th>\n                    <th>MM</th>\n                    <th>Atoms</th>\n                    <th>Rel. Atomic Mass</th>\n                    <th>Grams</th>\n                    <th>Mols</th>\n                    <th>Molecules</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    this.state.computedElements.map(\n                      ({ element, units, atoms, MM, atomicMass, mols, grams }, i) =>\n                        <tr key={i}>\n                          <td>{element}</td>\n                          <td>{units}</td>\n                          <td>{MM.toFixed(4)}</td>\n                          <td>{atoms.toFixed(4)}</td>\n                          <td>{atomicMass.toFixed(4)}</td>\n                          <td>{grams.toFixed(4)}</td>\n                          <td>{mols.toFixed(4)}</td>\n                          <td>-</td>\n                        </tr>\n                    )\n                  }\n                </tbody>\n                <tfoot>\n                  <tr>\n                    <th>TOTAL</th>\n                    <td>{this.sumAllValues('units')}</td>\n                    <td>{this.sumAllValues('MM').toFixed(4)}</td>\n                    <td>{this.sumAllValues('atoms').toFixed(4)}</td>\n                    <td>-</td>\n                    <td>{Number(this.state.grams).toFixed(4)}</td>\n                    <td>{Number(this.state.mols).toFixed(4)}</td>\n                    <td>{this.state.molecules.toFixed(4)}</td>\n                  </tr>\n                </tfoot>\n              </table>\n              :\n              <div />\n          }\n        </header>\n      </div>\n    );\n  };\n};","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}